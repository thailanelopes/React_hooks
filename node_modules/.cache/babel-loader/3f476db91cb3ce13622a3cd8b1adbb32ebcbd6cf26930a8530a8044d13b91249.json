{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\017674631\\\\Downloads\\\\React_hooks\\\\src\\\\components\\\\Usuarios\\\\Usuarios.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AdicionarUsuario from '../AdicionarUsuario/AdicionarUsuario';\nimport Usuario from '../Usuario/Usuario';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Usuarios() {\n  _s();\n  const [usuarios, setUsuarios] = useState([]);\n  useEffect(() => {\n    fetch('https://reqres.in/api/users').then(resposta => resposta.json()).then(dados => {\n      const usuarios = dados.data.map(usuario => ({\n        id: usuario.id,\n        nome: usuario.first_name,\n        sobrenome: usuario.last_name,\n        email: usuario.email\n      }));\n      setUsuarios(usuarios);\n    });\n  });\n  const adicionarUsuario = usuario => {\n    setUsuarios(usuariosAtuais => [...usuariosAtuais, usuario]);\n  };\n  const removerUsuario = usuario => {\n    if (window.confirm(`Tem certeza que deseja remover \"${usuario.nome} ${usuario.sobrenome}\"?`)) {\n      fetch(`https://reqres.in/api/users/${usuario.id}`, {\n        method: 'DELETE'\n      }).then(resposta => {\n        if (resposta.ok) {\n          setUsuarios(usuarios.filter(x => x.id !== usuario.id));\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AdicionarUsuario, {\n      adicionarUsuario: adicionarUsuario\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), usuarios.map(usuario => /*#__PURE__*/_jsxDEV(Usuario, {\n      usuario: usuario,\n      removerUsuario: () => removerUsuario.bind(usuario)\n    }, usuario.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n}\n_s(Usuarios, \"oF4uvU8ybcIlrygaNCN2tFMvdYA=\");\n_c = Usuarios;\nexport default Usuarios;\nvar _c;\n$RefreshReg$(_c, \"Usuarios\");","map":{"version":3,"names":["React","useState","useEffect","AdicionarUsuario","Usuario","jsxDEV","_jsxDEV","Fragment","_Fragment","Usuarios","_s","usuarios","setUsuarios","fetch","then","resposta","json","dados","data","map","usuario","id","nome","first_name","sobrenome","last_name","email","adicionarUsuario","usuariosAtuais","removerUsuario","window","confirm","method","ok","filter","x","children","fileName","_jsxFileName","lineNumber","columnNumber","bind","_c","$RefreshReg$"],"sources":["C:/Users/017674631/Downloads/React_hooks/src/components/Usuarios/Usuarios.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport AdicionarUsuario from '../AdicionarUsuario/AdicionarUsuario'\nimport Usuario from '../Usuario/Usuario'\n\nfunction Usuarios() {\n\nconst [usuarios, setUsuarios] = useState([])\n\nuseEffect(() => {\n  fetch('https://reqres.in/api/users')\n  .then(resposta => resposta.json())\n  .then(dados => {\n    const usuarios = dados.data.map(usuario => ({\n      id: usuario.id,\n      nome: usuario.first_name,\n      sobrenome: usuario.last_name,\n      email: usuario.email\n    }))\n\n   setUsuarios(usuarios)\n  })\n})\n\n  const adicionarUsuario = usuario => {\n    setUsuarios(usuariosAtuais => [...usuariosAtuais, usuario])\n  }\n\n  const removerUsuario = usuario => {\n    if (window.confirm(`Tem certeza que deseja remover \"${usuario.nome} ${usuario.sobrenome}\"?`)) {\n      fetch(`https://reqres.in/api/users/${usuario.id}`, {\n        method: 'DELETE'\n      })\n        .then(resposta => {\n          if (resposta.ok) {\n            setUsuarios(usuarios.filter(x => x.id !== usuario.id))\n          }\n        })\n    }\n  }\n\n    return (\n      <>\n        <AdicionarUsuario adicionarUsuario={adicionarUsuario} />\n\n        {usuarios.map(usuario => (\n          <Usuario key={usuario.id}\n            usuario={usuario}\n            removerUsuario={() => removerUsuario.bind(usuario)}\n          />\n        ))}\n      </>\n    )\n}\n\nexport default Usuarios"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,OAAOC,OAAO,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,6BAA6B,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,KAAK,IAAI;MACb,MAAMN,QAAQ,GAAGM,KAAK,CAACC,IAAI,CAACC,GAAG,CAACC,OAAO,KAAK;QAC1CC,EAAE,EAAED,OAAO,CAACC,EAAE;QACdC,IAAI,EAAEF,OAAO,CAACG,UAAU;QACxBC,SAAS,EAAEJ,OAAO,CAACK,SAAS;QAC5BC,KAAK,EAAEN,OAAO,CAACM;MACjB,CAAC,CAAC,CAAC;MAEJd,WAAW,CAACD,QAAQ,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEA,MAAMgB,gBAAgB,GAAGP,OAAO,IAAI;IAClCR,WAAW,CAACgB,cAAc,IAAI,CAAC,GAAGA,cAAc,EAAER,OAAO,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMS,cAAc,GAAGT,OAAO,IAAI;IAChC,IAAIU,MAAM,CAACC,OAAO,CAAE,mCAAkCX,OAAO,CAACE,IAAK,IAAGF,OAAO,CAACI,SAAU,IAAG,CAAC,EAAE;MAC5FX,KAAK,CAAE,+BAA8BO,OAAO,CAACC,EAAG,EAAC,EAAE;QACjDW,MAAM,EAAE;MACV,CAAC,CAAC,CACClB,IAAI,CAACC,QAAQ,IAAI;QAChB,IAAIA,QAAQ,CAACkB,EAAE,EAAE;UACfrB,WAAW,CAACD,QAAQ,CAACuB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACd,EAAE,KAAKD,OAAO,CAACC,EAAE,CAAC,CAAC;QACxD;MACF,CAAC,CAAC;IACN;EACF,CAAC;EAEC,oBACEf,OAAA,CAAAE,SAAA;IAAA4B,QAAA,gBACE9B,OAAA,CAACH,gBAAgB;MAACwB,gBAAgB,EAAEA;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAEvD7B,QAAQ,CAACQ,GAAG,CAACC,OAAO,iBACnBd,OAAA,CAACF,OAAO;MACNgB,OAAO,EAAEA,OAAQ;MACjBS,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAACY,IAAI,CAACrB,OAAO;IAAE,GAFvCA,OAAO,CAACC,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIzB,CAAC;EAAA,gBACD;AAET;AAAC9B,EAAA,CAhDQD,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAkDjB,eAAeA,QAAQ;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}